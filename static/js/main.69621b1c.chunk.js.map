{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","type","name","value","onClick","Section","title","children","Notification","message","App","state","e","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAeeA,EAZI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,qCACI,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,yCAAYC,KACZ,oDAAuBC,EAAvB,YCkBOC,EAzBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,gBAAH,OACpB,qCACI,uBACIC,KAAK,SACLC,KAAK,OACLC,MAAM,OACNC,QAASJ,IAEb,uBAEIC,KAAK,SACLC,KAAK,UACLC,MAAM,UACNC,QAASJ,IAEb,uBAEIC,KAAK,SACLC,KAAK,MACLC,MAAM,MACNC,QAASJ,QCPNK,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,qCACC,6BAAKD,IACJC,MCEWC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mCACI,6BAAKA,OCoFEC,E,4MAhFbC,MAAQ,CACNjB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPI,gBAAkB,SAACY,GACjB,IAAMV,EAAOU,EAAEC,OAAOX,KACxB,EAAKY,UAAS,SAACC,GAAD,sBACZb,EAAOa,EAAUb,GAAQ,O,EAwB5Bc,mBAAqB,WAAO,IAAD,EACK,EAAKL,MAEpC,OAH0B,EAClBjB,KADkB,EACZC,QADY,EACHC,K,EAKvBqB,gCAAkC,WAChC,IAAOC,EAAU,EAAKF,qBAElBG,EAAqB,IADV,EAAKR,MAAdjB,KAC0BwB,EAClC,OAAOE,KAAKC,MAAMF,I,4CAGlB,WAAU,IAAD,EACqBG,KAAKX,MAA5BjB,EADE,EACFA,KAAMC,EADJ,EACIA,QAASC,EADb,EACaA,IAEdsB,EAASI,KAAKN,qBAEpB,OACE,gCAEE,cAAC,EAAD,CAASV,MAAM,wBAAf,SAEE,cAAC,EAAD,CAAiBN,gBAAiBsB,KAAKtB,oBAQ7B,IAAXkB,EAAgB,cAAC,EAAD,CAAcT,QAAQ,sBAEpC,cAAC,EAAD,CAASH,MAAM,aAAf,SACC,cAAC,EAAD,CACEZ,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOyB,KAAKN,qBACZlB,mBAAoBwB,KAAKL,6C,GAzErBM,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.69621b1c.chunk.js","sourcesContent":["    import React from 'react';\r\n    import ReactDOM from 'react-dom';\r\n    \r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n    <>\r\n        <p>Good: {good}</p>\r\n        <p>Neutral: {neutral}</p>\r\n        <p>Bad: {bad}</p>\r\n        <p>Total:  {total}</p>\r\n        <p>Positive feedback: {positivePercentage} %</p>\r\n    </>\r\n);\r\n       \r\n       \r\n       \r\nexport default Statistics;","import React from 'react';\r\n\r\nconst FeedbackOptions = ({ onLeaveFeedback }) => (\r\n    <>\r\n        <input\r\n            type=\"button\"\r\n            name=\"good\"\r\n            value=\"Good\"\r\n            onClick={onLeaveFeedback}\r\n        />\r\n        <input\r\n    \r\n            type=\"button\"\r\n            name=\"neutral\"\r\n            value=\"Neutral\"\r\n            onClick={onLeaveFeedback}\r\n        />\r\n        <input\r\n   \r\n            type=\"button\"\r\n            name=\"bad\"\r\n            value=\"Bad\"\r\n            onClick={onLeaveFeedback}\r\n        />\r\n    </>\r\n);\r\n\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n    <>\r\n        <h1>{message}</h1>\r\n    </>\r\n);\r\n\r\nexport default Notification;","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Statistics from './components/Statistics/Statistics'\nimport FeedbackOptions from './components/FeedbackOptions/FeedbackOptions'\nimport Section from './components/Section/Section'\nimport Notification from './components/Notification/Notification'\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  onLeaveFeedback = (e) => {\n    const name = e.target.name;\n\t\tthis.setState((prevState) => ({\n\t\t\t[name]: prevState[name] + 1\n\t\t}));\n  }\n\n//  goodHandleIncrement = () => {\n//     this.setState(prevState => ({\n//         good: prevState.good + 1\n//      }));\n//  };\n  \n  \n  \n//  neutralHandleIncrement = () => {\n//     this.setState(prevState => ({\n//         neutral: prevState.neutral + 1\n//      }));\n//  };\n  \n//    badHandleIncrement = () => {\n//     this.setState(prevState => ({\n//         bad: prevState.bad + 1\n//      }));\n//  };\n \n countTotalFeedback = () => {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst result = good + neutral + bad;\n\t\treturn result;\n\t};\n \n  countPositiveFeedbackPercentage = () => {\n    const  result  = this.countTotalFeedback();\n\t\tconst { good } = this.state;\n\t\tconst percentage = (good * 100) / result;\n\t\treturn Math.round(percentage);\n  }\n  \n  render() {\n\tconst { good, neutral, bad } = this.state;\n    \n    const result = this.countTotalFeedback()\n\n    return (\n      <div >\n       \n        <Section title=\"Please leave feedback\">\n      \n          <FeedbackOptions onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n      \n        {/* <button type=\"button\" onClick={this.goodHandleIncrement}>Good</button>\n        <button type=\"button\" onClick={this.neutralHandleIncrement}>Neutral</button>\n        <button type=\"button\" onClick={this.badHandleIncrement}>Bad</button> */}\n\n        {result === 0 ? (<Notification message=\"No feedback given\"></Notification>) :\n        \n          (<Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          </Section>)}\n      \n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}