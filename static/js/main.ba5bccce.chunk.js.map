{"version":3,"sources":["App.js","index.js"],"names":["App","state","good","neutral","bad","goodHandleIncrement","setState","prevState","neutralHandleIncrement","badHandleIncrement","countTotalFeedback","this","length","console","log","type","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA4DeA,E,4MAvDbC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIRC,oBAAsB,WACnB,EAAKC,UAAS,SAAAC,GAAS,MAAK,CACxBL,KAAMK,EAAUL,KAAO,O,EAI9BM,uBAAyB,WACtB,EAAKF,UAAS,SAAAC,GAAS,MAAK,CACxBJ,QAASI,EAAUJ,QAAU,O,EAIlCM,mBAAqB,WACpB,EAAKH,UAAS,SAAAC,GAAS,MAAK,CACxBH,IAAKG,EAAUH,IAAM,O,4CAW3B,WAIE,IAAMM,EAAqBC,KAAKV,MAAMW,OAItC,OAFAC,QAAQC,IAAIJ,GAGV,gCACE,uDACA,wBAAQK,KAAK,SAASC,QAASL,KAAKN,oBAApC,kBACA,wBAAQU,KAAK,SAASC,QAASL,KAAKH,uBAApC,qBACA,wBAAQO,KAAK,SAASC,QAASL,KAAKF,mBAApC,iBACA,4CACA,uCAAWE,KAAKV,MAAMC,QACtB,0CAAcS,KAAKV,MAAME,WACzB,sCAASQ,KAAKV,MAAMG,OACpB,yCAAYO,KAAKD,6B,GAnDPO,aCElBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ba5bccce.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n\n  \n goodHandleIncrement = () => {\n    this.setState(prevState => ({\n        good: prevState.good + 1\n     }));\n };\n  \n neutralHandleIncrement = () => {\n    this.setState(prevState => ({\n        neutral: prevState.neutral + 1\n     }));\n };\n  \n   badHandleIncrement = () => {\n    this.setState(prevState => ({\n        bad: prevState.bad + 1\n     }));\n };\n \n//  countTotalFeedback = () => {\n// \t\tconst { good, neutral, bad } = this.state;\n// \t\tconst result = good + neutral + bad;\n// \t\treturn result;\n// \t};\n \n  \n  render() {\n\n    \n\n    const countTotalFeedback = this.state.length;\n\n    console.log(countTotalFeedback)\n\n    return (\n      <div >\n        <h1>Please leave feedback</h1>\n        <button type=\"button\" onClick={this.goodHandleIncrement}>Good</button>\n        <button type=\"button\" onClick={this.neutralHandleIncrement}>Neutral</button>\n        <button type=\"button\" onClick={this.badHandleIncrement}>Bad</button>\n        <h1>Statistics</h1>\n        <p>Good: { this.state.good}</p>\n        <p>Neutral: { this.state.neutral}</p>\n        <p>Bad: {this.state.bad}</p>\n        <p>Total:  {this.countTotalFeedback}</p>\n      </div>\n    );\n  }\n}\nexport default App;\n\n\n\n// class App extends Component {\n//   state = {\n//     //храним массив\n//     todos: initialTodos,\n//   };\n// //метод для удаления по id/ работа с коллекцией выкидываем елемент id которого совпадает\n//   deleteTodo = todoId => {\n//     this.setState(prevState => ({\n//       todos: prevState.todos.filter(todo => todo.id !== todoId),\n//     }));\n//   };\n\n//   render() {\n//     const { todos } = this.state;\n\n//     const totalTodoCount = todos.length;\n//     const completedTodoCount = todos.reduce(\n//       (total, todo) => (todo.completed ? total + 1 : total),\n//       0,\n//     );\n\n//     return (\n//       <>\n//         <h1>Состояние компонента</h1>\n\n//         {/* <Counter initialValue={10} /> */}\n//         {/* <Dropdown /> */}\n//         {/* <ColorPicker options={colorPickerOptions} /> */}\n\n//         <div>\n//           <p>Общее кол-во: {totalTodoCount}</p>\n//           <p>Кол-во выполненных: {completedTodoCount}</p>\n//         </div>\n// //передаем пропсы для удаления от родителей к детям\n//         <TodoList todos={todos} onDeleteTodo={this.deleteTodo} />\n//       </>\n//     );\n//   }\n// }\n\n// export default App; \n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}